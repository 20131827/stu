console.log(typeof 'hihi world');
console.log(typeof 123);
==> 타입오브는 뒤에 있는값의 자료형을 알아볼수있다.


function getType(data){
    return Object.prototype.toString.call(data).slice(8,-1);
}
==> getType이름의 함수를 만들고 이 함수는 data라는 인수를 받아야 작동되며
리턴값으로는 전달받은 인수의 자료형을 보내주며! slice(8,-1)의 의미는
앞에서 8자리 뒤에서부터 1자리의 내용을 빼고(잘라서) 보여주겠다!

1.js 라는 페이지에서 작성한 함수는 2.js 에서 실행할수없다 이러한 점을 해결하기 위해
함수들을 모아놓는 js파일을 하나 만들고 그 안에
export default function getType(data){
    return Object.prototype.toString.call(data).slice(8,-1);
} 이런식으로 입력을 하게되면 getType이라는 함수를~ export(내보내겠다)
default(기본값으로) 가 되어서! 다른 js파일에서 사용할수있게 한다!

export한 함수를 사용하기 위해서는! 함수가 모여있는 파일을 import해야하는데
임포트 방법으로는 함수를 임포트 받고있음 js페이지에서 import 함수명 from '해당함수가 있는 페이지의 위치';
로 작성할 수 있다. 예를 들자면 import getType from './getType.js'; 이런식


js의 비교 연산자
const a = 1;
const b = 1;
console.log(a === b);    //true
==> js에서 비교연산은 ===  이다.
=을 3번이나 쓴다..

const a = 1;
const b = 1;
console.log(a !== b);    // flase
==> js에서 불일치연산은 !==
!뒤에 ==가 2번이나 붙는다..


const a = 'ab' === 'ab';
console.log(a );
==> js에서 문자데이터 비교연산도 ===로 쌉가능..


Math.floor(Math.random() * 10)
==> Math.random()은 0. ???? 의 값을 랜덤으로 리턴해주고 그값에다
10을 곱하면 ? . ????? 정수 1의자리에 까지 표시가 된다.
이러한 값을 감싸고있는 Math.floor ( ) 는 가장큰 자리수의 값을 제외하고 
나머지는 다 버리는 함수이다!
결과적으로 일의자리 값으 랜덤으로 나오는 함수가 되는것!

