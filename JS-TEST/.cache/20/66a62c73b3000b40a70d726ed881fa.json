{"id":"main.js","dependencies":[{"name":"C:\\gitSavePoint\\stu\\JS-TEST\\package.json","includedInParent":true,"mtime":1631347375530}],"generated":{"js":"//-------------------------------------------------------------------\n// -------------------------------------------------------------------\n// this\n// 일반(normal) 함수는 호출 위치에 따라 this 정의!\n// 화살표(arrow) 함수는 자신이 선언된 함수 범위에서 this 정의!\n// const t = {\n//     name: 'Heropy',\n//     a :function(() => {\n//         console.log(this.name)\n//     });\n// }\n// heropy.normal()\n// heropy.arrow()\n// const amy = {\n//     name: 'Amy',\n//     normal: heropy.normal,\n//     arrow: heropy.arrow\n// }\n// amy.normal()\n// amy.arrow()\n// const timer = {\n//     name: 'he',\n//     timeout: function() {\n//         setTimeout(function(){\n//             console.log(this.name)\n//         },2000)\n//     }\n// }\n// timer.timeout()\n// const timer = {\n//     name: 'he',\n//     timeout: function() {\n//         setTimeout(() => {\n//             console.log(this.name)\n//         },2000)\n//     }\n// }\n// timer.timeout()\n// function User(name){\n//     this.name = name\n// }\n//-------------------------------------------------------------------\n// const hero ={\n//     firstName : 'heropy',\n//     lastName : 'park',\n//     getFullName : function(){\n//         return `${this.firstName} ${this.lastName}`\n//     }\n// }\n// function User(first, last){\n//     this.firstName = first\n//     this.lastName = last\n// }\n// User.prototype.getFullName = function(){\n//     return `${this.firstName} ${this.lastName}`\n// }\n// const hero = new User('heropy','park')\n// const choi = new User('jinwoong','choi')\n// console.log(hero.getFullName())\n// console.log(choi)\n//-------------------------------------------------------------------\n// 콜백 (Callback)\n// 함수의 인수로 사용되는 함수!\n// setTimeout(함수, 시간)  ==> setTimeout이라는 함수안에 함수를 인수로 사용되니까 이게 콜백!\n// function timeout(){\n//     setTimeout(() =>{\n//         console.log('kkiki')\n//     }, 4000)\n// }\n// timeout()\n// console.log('Done');\n// 이렇게 작성되면~ Done이 먼저 출력된 뒤에 kkiki가 출력된다..ㅜ\n// timeout함수가 다 끝난다음에 Done을 출력하기 위해서는 아래와 같이 해야한다(콜백)\n// function timeout(kiki){\n//     setTimeout(() =>{\n//         console.log('kkiki')\n//         kiki()\n//     }, 4000)\n// }\n// timeout(() => { \n//     console.log('Done');\n// })\n//-------------------------------------------------------------------\n// 타이머 함수\n// setTimeout(함수, 시간) : 일정 시간 후 함수 실행\n// setInterval(함수, 시간) : 시간 간격마다 함수 실행\n// clearTimeout() : 설정된 Timeout 함수를 종료\n// clearInterval() : 설정된 Interval 함수를 종료\n// 익명 함수를 만들어서 넣어도 됨~\n// setTimeout(function() {\n//     console.log('ㅎㅇ');\n// }, 3000);\n// 위의 코드를 람다를 사용해서 바꿔봄 내용은 동일\n// setTimeout(() => {\n//     console.log('ㅎㅇ')\n// }, 3000);\n// setTimeout을 실행하게되면 특정한 timer값이 반환이 되는데\n// 그 값을 timer라는 변수에 한번 받아봄\n// const timer = setTimeout(() => {\n//     console.log('ㅎㅇ')\n// }, 3000);\n// 화면에 Hello world!를 클릭하면 clearTimeout을 사용해서 timer가 종료되도록 만들어봄\n// Hello world! 클릭하면 timer가 종료되어서 함수 실행이 안됨! ㅋㅋㅋ\n// const h1El = document.querySelector('h1');\n// h1El.addEventListener('click', function() {\n//     clearTimeout(timer);\n// })\n// 위의 코드를 람다로 바꿔봤다\n// const h1El = document.querySelector('h1');\n// h1El.addEventListener('click', () => {\n//     clearTimeout(timer);\n// })\n// const timer = setInterval(() => {\n//     console.log('ㅎㅇ')\n// }, 3000);\n// const h1El = document.querySelector('h1');\n// h1El.addEventListener('click', () => {\n//     clearInterval(timer);\n// })\n//-------------------------------------------------------------------\n// 호이스팅\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n// const a = 7;\n// const double = function () {\n//     console.log(a * 4);\n// }\n// double()\n//-------------------------------------------------------------------\n// 즉시실행함수\n// IIFE, Immediately-Invoked Function Expreesion\n// const a = 20;\n// function double(){\n//     console.log(a * 2);\n// }\n// double();\n//  위와 같은 방법은 함수를 만들자 마자 바로 써야하는데 함수를 만들어 놓고 호출하는 번거로움이 있다\n// 익명함수를 만들자\n// function () {\n//     console.log(a * 2);\n// }\n// 익명함수를 만들었더니 호출을 하지못해서 쓸수가 없다..\n// 위와같은 상황을 해결하기 위해서는 익명 함수를 ( ) 괄호로 묶어주고 그 뒤에 ( ) 괄호를\n// 한번더 사용한다!\n// (function () {\n//     console.log(a * 2);\n// })()\n// 위의 코드와 똑같은 내용이다! 다만 위의 경우 익명함수를 만들고 ( )를 사용해서\n// 감싸 준 다음 ( )를 한번더 작성했다면 아래의 코드는 익명함수 내부에 ( )를 사용했다!\n// (function () {\n//     console.log(a * 2);\n// }())\n//-------------------------------------------------------------------\n// 화살표 함수\n// () => {}       vs     function ()  {}\n// const double = function (x) {\n//     return x*2;\n// }\n// console.log('double : ', double(7));\n// const doubleArrow = (x) => {\n//     return x*2;\n// }\n// console.log('doubleArrow : ', doubleArrow(7));\n// const doubleArrow = (x) => x*2\n// console.log('doubleArrow : ', doubleArrow(7));\n// const doubleArrow = (x) => ({\n//     name : 'woong'\n//  })\n//  console.log('doubleArrow : ', doubleArrow(7).name);\n// const sum = function (x, y){\n//     return x+y;\n// }\n// console.log(sum(1 ,10));\n// const sumArrow = (x, y) => {\n//     return x+y;\n// }\n// console.log(sumArrow(1 ,10));\n// const sumArrow = (x, y) => x+y\n// console.log(sumArrow(1 ,10));\n//-------------------------------------------------------------------\n// 함수 복습\n// \"함수선언방식\"\n// function sum(x, y){\n//     return x+y;\n// }\n// console.log(sum(1,30));\n// 함수의 이름을 작성하지않는 익명 함수를 만들어서 변수에 담에서 사용하는 \"함수표현방식\"\n// const sum = function (x, y){\n//     return x+y;\n// }\n// arguments는 함수를 실행할때 전달받은 인수의 값들을 제로베이스드 배열형태로 알아서 저장해준다\n// 따라서 매개변수를 입력하지 않고도 함수사용이 가능하다!\n//  function sum (){\n//     return arguments[0] + arguments[1];\n// }\n// sum(1 ,10);\n// ------------------------------------------------------------\n// const ulEl = document.querySelector('ul');\n// for(let i = 0 ; i < 10 ; i++){\n//     const li = document.createElement('li');\n//     li.textContent=`List-${i+1}`;\n//     if(i % 2){\n//         li.addEventListener('click',function(){\n//             console.log(li.textContent);\n//         })\n//     }\n//     ulEl.appendChild(li);\n// }\n// if(1){\n//     console.log('ㅎㅇㅎㅇ');\n//     console.log(ulEl);\n// }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":41,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":43,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":44,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":46,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":47,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":50,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":51,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":52,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":53,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":54,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":55,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":56,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":57,"column":0}},{"generated":{"line":39,"column":0},"source":"main.js","original":{"line":58,"column":0}},{"generated":{"line":40,"column":0},"source":"main.js","original":{"line":59,"column":0}},{"generated":{"line":41,"column":0},"source":"main.js","original":{"line":60,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":69,"column":0}},{"generated":{"line":43,"column":0},"source":"main.js","original":{"line":70,"column":0}},{"generated":{"line":44,"column":0},"source":"main.js","original":{"line":71,"column":0}},{"generated":{"line":45,"column":0},"source":"main.js","original":{"line":72,"column":0}},{"generated":{"line":46,"column":0},"source":"main.js","original":{"line":73,"column":0}},{"generated":{"line":47,"column":0},"source":"main.js","original":{"line":74,"column":0}},{"generated":{"line":48,"column":0},"source":"main.js","original":{"line":75,"column":0}},{"generated":{"line":49,"column":0},"source":"main.js","original":{"line":76,"column":0}},{"generated":{"line":50,"column":0},"source":"main.js","original":{"line":79,"column":0}},{"generated":{"line":51,"column":0},"source":"main.js","original":{"line":80,"column":0}},{"generated":{"line":52,"column":0},"source":"main.js","original":{"line":81,"column":0}},{"generated":{"line":53,"column":0},"source":"main.js","original":{"line":82,"column":0}},{"generated":{"line":54,"column":0},"source":"main.js","original":{"line":83,"column":0}},{"generated":{"line":55,"column":0},"source":"main.js","original":{"line":84,"column":0}},{"generated":{"line":56,"column":0},"source":"main.js","original":{"line":85,"column":0}},{"generated":{"line":57,"column":0},"source":"main.js","original":{"line":87,"column":0}},{"generated":{"line":58,"column":0},"source":"main.js","original":{"line":88,"column":0}},{"generated":{"line":59,"column":0},"source":"main.js","original":{"line":90,"column":0}},{"generated":{"line":60,"column":0},"source":"main.js","original":{"line":91,"column":0}},{"generated":{"line":61,"column":0},"source":"main.js","original":{"line":95,"column":0}},{"generated":{"line":62,"column":0},"source":"main.js","original":{"line":96,"column":0}},{"generated":{"line":63,"column":0},"source":"main.js","original":{"line":97,"column":0}},{"generated":{"line":64,"column":0},"source":"main.js","original":{"line":98,"column":0}},{"generated":{"line":65,"column":0},"source":"main.js","original":{"line":100,"column":0}},{"generated":{"line":66,"column":0},"source":"main.js","original":{"line":101,"column":0}},{"generated":{"line":67,"column":0},"source":"main.js","original":{"line":102,"column":0}},{"generated":{"line":68,"column":0},"source":"main.js","original":{"line":103,"column":0}},{"generated":{"line":69,"column":0},"source":"main.js","original":{"line":104,"column":0}},{"generated":{"line":70,"column":0},"source":"main.js","original":{"line":105,"column":0}},{"generated":{"line":71,"column":0},"source":"main.js","original":{"line":106,"column":0}},{"generated":{"line":72,"column":0},"source":"main.js","original":{"line":107,"column":0}},{"generated":{"line":73,"column":0},"source":"main.js","original":{"line":108,"column":0}},{"generated":{"line":74,"column":0},"source":"main.js","original":{"line":109,"column":0}},{"generated":{"line":75,"column":0},"source":"main.js","original":{"line":110,"column":0}},{"generated":{"line":76,"column":0},"source":"main.js","original":{"line":111,"column":0}},{"generated":{"line":77,"column":0},"source":"main.js","original":{"line":112,"column":0}},{"generated":{"line":78,"column":0},"source":"main.js","original":{"line":113,"column":0}},{"generated":{"line":79,"column":0},"source":"main.js","original":{"line":114,"column":0}},{"generated":{"line":80,"column":0},"source":"main.js","original":{"line":115,"column":0}},{"generated":{"line":81,"column":0},"source":"main.js","original":{"line":116,"column":0}},{"generated":{"line":82,"column":0},"source":"main.js","original":{"line":117,"column":0}},{"generated":{"line":83,"column":0},"source":"main.js","original":{"line":126,"column":0}},{"generated":{"line":84,"column":0},"source":"main.js","original":{"line":127,"column":0}},{"generated":{"line":85,"column":0},"source":"main.js","original":{"line":128,"column":0}},{"generated":{"line":86,"column":0},"source":"main.js","original":{"line":129,"column":0}},{"generated":{"line":87,"column":0},"source":"main.js","original":{"line":130,"column":0}},{"generated":{"line":88,"column":0},"source":"main.js","original":{"line":131,"column":0}},{"generated":{"line":89,"column":0},"source":"main.js","original":{"line":133,"column":0}},{"generated":{"line":90,"column":0},"source":"main.js","original":{"line":134,"column":0}},{"generated":{"line":91,"column":0},"source":"main.js","original":{"line":135,"column":0}},{"generated":{"line":92,"column":0},"source":"main.js","original":{"line":136,"column":0}},{"generated":{"line":93,"column":0},"source":"main.js","original":{"line":137,"column":0}},{"generated":{"line":94,"column":0},"source":"main.js","original":{"line":138,"column":0}},{"generated":{"line":95,"column":0},"source":"main.js","original":{"line":139,"column":0}},{"generated":{"line":96,"column":0},"source":"main.js","original":{"line":140,"column":0}},{"generated":{"line":97,"column":0},"source":"main.js","original":{"line":142,"column":0}},{"generated":{"line":98,"column":0},"source":"main.js","original":{"line":143,"column":0}},{"generated":{"line":99,"column":0},"source":"main.js","original":{"line":144,"column":0}},{"generated":{"line":100,"column":0},"source":"main.js","original":{"line":145,"column":0}},{"generated":{"line":101,"column":0},"source":"main.js","original":{"line":146,"column":0}},{"generated":{"line":102,"column":0},"source":"main.js","original":{"line":148,"column":0}},{"generated":{"line":103,"column":0},"source":"main.js","original":{"line":149,"column":0}},{"generated":{"line":104,"column":0},"source":"main.js","original":{"line":150,"column":0}},{"generated":{"line":105,"column":0},"source":"main.js","original":{"line":151,"column":0}},{"generated":{"line":106,"column":0},"source":"main.js","original":{"line":152,"column":0}},{"generated":{"line":107,"column":0},"source":"main.js","original":{"line":153,"column":0}},{"generated":{"line":108,"column":0},"source":"main.js","original":{"line":155,"column":0}},{"generated":{"line":109,"column":0},"source":"main.js","original":{"line":156,"column":0}},{"generated":{"line":110,"column":0},"source":"main.js","original":{"line":157,"column":0}},{"generated":{"line":111,"column":0},"source":"main.js","original":{"line":158,"column":0}},{"generated":{"line":112,"column":0},"source":"main.js","original":{"line":159,"column":0}},{"generated":{"line":113,"column":0},"source":"main.js","original":{"line":163,"column":0}},{"generated":{"line":114,"column":0},"source":"main.js","original":{"line":164,"column":0}},{"generated":{"line":115,"column":0},"source":"main.js","original":{"line":165,"column":0}},{"generated":{"line":116,"column":0},"source":"main.js","original":{"line":168,"column":0}},{"generated":{"line":117,"column":0},"source":"main.js","original":{"line":169,"column":0}},{"generated":{"line":118,"column":0},"source":"main.js","original":{"line":170,"column":0}},{"generated":{"line":119,"column":0},"source":"main.js","original":{"line":171,"column":0}},{"generated":{"line":120,"column":0},"source":"main.js","original":{"line":175,"column":0}},{"generated":{"line":121,"column":0},"source":"main.js","original":{"line":176,"column":0}},{"generated":{"line":122,"column":0},"source":"main.js","original":{"line":177,"column":0}},{"generated":{"line":123,"column":0},"source":"main.js","original":{"line":179,"column":0}},{"generated":{"line":124,"column":0},"source":"main.js","original":{"line":181,"column":0}},{"generated":{"line":125,"column":0},"source":"main.js","original":{"line":182,"column":0}},{"generated":{"line":126,"column":0},"source":"main.js","original":{"line":183,"column":0}},{"generated":{"line":127,"column":0},"source":"main.js","original":{"line":185,"column":0}},{"generated":{"line":128,"column":0},"source":"main.js","original":{"line":190,"column":0}},{"generated":{"line":129,"column":0},"source":"main.js","original":{"line":191,"column":0}},{"generated":{"line":130,"column":0},"source":"main.js","original":{"line":192,"column":0}},{"generated":{"line":131,"column":0},"source":"main.js","original":{"line":194,"column":0}},{"generated":{"line":132,"column":0},"source":"main.js","original":{"line":195,"column":0}},{"generated":{"line":133,"column":0},"source":"main.js","original":{"line":196,"column":0}},{"generated":{"line":134,"column":0},"source":"main.js","original":{"line":197,"column":0}},{"generated":{"line":135,"column":0},"source":"main.js","original":{"line":198,"column":0}},{"generated":{"line":136,"column":0},"source":"main.js","original":{"line":199,"column":0}},{"generated":{"line":137,"column":0},"source":"main.js","original":{"line":202,"column":0}},{"generated":{"line":138,"column":0},"source":"main.js","original":{"line":203,"column":0}},{"generated":{"line":139,"column":0},"source":"main.js","original":{"line":204,"column":0}},{"generated":{"line":140,"column":0},"source":"main.js","original":{"line":205,"column":0}},{"generated":{"line":141,"column":0},"source":"main.js","original":{"line":206,"column":0}},{"generated":{"line":142,"column":0},"source":"main.js","original":{"line":208,"column":0}},{"generated":{"line":143,"column":0},"source":"main.js","original":{"line":209,"column":0}},{"generated":{"line":144,"column":0},"source":"main.js","original":{"line":210,"column":0}},{"generated":{"line":145,"column":0},"source":"main.js","original":{"line":211,"column":0}},{"generated":{"line":146,"column":0},"source":"main.js","original":{"line":212,"column":0}},{"generated":{"line":147,"column":0},"source":"main.js","original":{"line":214,"column":0}},{"generated":{"line":148,"column":0},"source":"main.js","original":{"line":215,"column":0}},{"generated":{"line":149,"column":0},"source":"main.js","original":{"line":216,"column":0}},{"generated":{"line":150,"column":0},"source":"main.js","original":{"line":217,"column":0}},{"generated":{"line":151,"column":0},"source":"main.js","original":{"line":218,"column":0}},{"generated":{"line":152,"column":0},"source":"main.js","original":{"line":224,"column":0}},{"generated":{"line":153,"column":0},"source":"main.js","original":{"line":225,"column":0}},{"generated":{"line":154,"column":0},"source":"main.js","original":{"line":226,"column":0}},{"generated":{"line":155,"column":0},"source":"main.js","original":{"line":229,"column":0}},{"generated":{"line":156,"column":0},"source":"main.js","original":{"line":230,"column":0}},{"generated":{"line":157,"column":0},"source":"main.js","original":{"line":231,"column":0}},{"generated":{"line":158,"column":0},"source":"main.js","original":{"line":232,"column":0}},{"generated":{"line":159,"column":0},"source":"main.js","original":{"line":235,"column":0}},{"generated":{"line":160,"column":0},"source":"main.js","original":{"line":236,"column":0}},{"generated":{"line":161,"column":0},"source":"main.js","original":{"line":237,"column":0}},{"generated":{"line":162,"column":0},"source":"main.js","original":{"line":238,"column":0}},{"generated":{"line":163,"column":0},"source":"main.js","original":{"line":241,"column":0}},{"generated":{"line":164,"column":0},"source":"main.js","original":{"line":242,"column":0}},{"generated":{"line":165,"column":0},"source":"main.js","original":{"line":244,"column":0}},{"generated":{"line":166,"column":0},"source":"main.js","original":{"line":245,"column":0}},{"generated":{"line":167,"column":0},"source":"main.js","original":{"line":246,"column":0}},{"generated":{"line":168,"column":0},"source":"main.js","original":{"line":247,"column":0}},{"generated":{"line":169,"column":0},"source":"main.js","original":{"line":249,"column":0}},{"generated":{"line":170,"column":0},"source":"main.js","original":{"line":250,"column":0}},{"generated":{"line":171,"column":0},"source":"main.js","original":{"line":251,"column":0}},{"generated":{"line":172,"column":0},"source":"main.js","original":{"line":252,"column":0}},{"generated":{"line":173,"column":0},"source":"main.js","original":{"line":254,"column":0}},{"generated":{"line":174,"column":0},"source":"main.js","original":{"line":255,"column":0}},{"generated":{"line":175,"column":0},"source":"main.js","original":{"line":256,"column":0}},{"generated":{"line":176,"column":0},"source":"main.js","original":{"line":257,"column":0}},{"generated":{"line":177,"column":0},"source":"main.js","original":{"line":259,"column":0}},{"generated":{"line":178,"column":0},"source":"main.js","original":{"line":260,"column":0}},{"generated":{"line":179,"column":0},"source":"main.js","original":{"line":265,"column":0}},{"generated":{"line":180,"column":0},"source":"main.js","original":{"line":266,"column":0}},{"generated":{"line":181,"column":0},"source":"main.js","original":{"line":268,"column":0}},{"generated":{"line":182,"column":0},"source":"main.js","original":{"line":269,"column":0}},{"generated":{"line":183,"column":0},"source":"main.js","original":{"line":270,"column":0}},{"generated":{"line":184,"column":0},"source":"main.js","original":{"line":271,"column":0}},{"generated":{"line":185,"column":0},"source":"main.js","original":{"line":273,"column":0}},{"generated":{"line":186,"column":0},"source":"main.js","original":{"line":275,"column":0}},{"generated":{"line":187,"column":0},"source":"main.js","original":{"line":276,"column":0}},{"generated":{"line":188,"column":0},"source":"main.js","original":{"line":277,"column":0}},{"generated":{"line":189,"column":0},"source":"main.js","original":{"line":278,"column":0}},{"generated":{"line":190,"column":0},"source":"main.js","original":{"line":280,"column":0}},{"generated":{"line":191,"column":0},"source":"main.js","original":{"line":281,"column":0}},{"generated":{"line":192,"column":0},"source":"main.js","original":{"line":282,"column":0}},{"generated":{"line":193,"column":0},"source":"main.js","original":{"line":283,"column":0}},{"generated":{"line":194,"column":0},"source":"main.js","original":{"line":284,"column":0}},{"generated":{"line":195,"column":0},"source":"main.js","original":{"line":286,"column":0}},{"generated":{"line":196,"column":0},"source":"main.js","original":{"line":288,"column":0}},{"generated":{"line":197,"column":0},"source":"main.js","original":{"line":289,"column":0}},{"generated":{"line":198,"column":0},"source":"main.js","original":{"line":291,"column":0}},{"generated":{"line":199,"column":0},"source":"main.js","original":{"line":292,"column":0}},{"generated":{"line":200,"column":0},"source":"main.js","original":{"line":293,"column":0}},{"generated":{"line":201,"column":0},"source":"main.js","original":{"line":294,"column":0}},{"generated":{"line":202,"column":0},"source":"main.js","original":{"line":295,"column":0}},{"generated":{"line":203,"column":0},"source":"main.js","original":{"line":296,"column":0}},{"generated":{"line":204,"column":0},"source":"main.js","original":{"line":297,"column":0}},{"generated":{"line":205,"column":0},"source":"main.js","original":{"line":298,"column":0}},{"generated":{"line":206,"column":0},"source":"main.js","original":{"line":299,"column":0}},{"generated":{"line":207,"column":0},"source":"main.js","original":{"line":300,"column":0}},{"generated":{"line":208,"column":0},"source":"main.js","original":{"line":302,"column":0}},{"generated":{"line":209,"column":0},"source":"main.js","original":{"line":303,"column":0}},{"generated":{"line":210,"column":0},"source":"main.js","original":{"line":304,"column":0}},{"generated":{"line":211,"column":0},"source":"main.js","original":{"line":305,"column":0}}],"sources":{"main.js":"//-------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// -------------------------------------------------------------------\r\n// this\r\n// 일반(normal) 함수는 호출 위치에 따라 this 정의!\r\n// 화살표(arrow) 함수는 자신이 선언된 함수 범위에서 this 정의!\r\n// const t = {\r\n//     name: 'Heropy',\r\n//     a :function(() => {\r\n//         console.log(this.name)\r\n//     });\r\n// }\r\n// heropy.normal()\r\n// heropy.arrow()\r\n\r\n// const amy = {\r\n//     name: 'Amy',\r\n//     normal: heropy.normal,\r\n//     arrow: heropy.arrow\r\n// }\r\n// amy.normal()\r\n// amy.arrow()\r\n\r\n\r\n\r\n\r\n// const timer = {\r\n//     name: 'he',\r\n//     timeout: function() {\r\n//         setTimeout(function(){\r\n//             console.log(this.name)\r\n//         },2000)\r\n//     }\r\n\r\n// }\r\n// timer.timeout()\r\n\r\n// const timer = {\r\n//     name: 'he',\r\n//     timeout: function() {\r\n//         setTimeout(() => {\r\n//             console.log(this.name)\r\n//         },2000)\r\n//     }\r\n// }\r\n// timer.timeout()\r\n// function User(name){\r\n//     this.name = name\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// const hero ={\r\n//     firstName : 'heropy',\r\n//     lastName : 'park',\r\n//     getFullName : function(){\r\n//         return `${this.firstName} ${this.lastName}`\r\n//     }\r\n// }\r\n\r\n\r\n// function User(first, last){\r\n//     this.firstName = first\r\n//     this.lastName = last\r\n// }\r\n// User.prototype.getFullName = function(){\r\n//     return `${this.firstName} ${this.lastName}`\r\n// }\r\n\r\n// const hero = new User('heropy','park')\r\n// const choi = new User('jinwoong','choi')\r\n\r\n// console.log(hero.getFullName())\r\n// console.log(choi)\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 콜백 (Callback)\r\n// 함수의 인수로 사용되는 함수!\r\n// setTimeout(함수, 시간)  ==> setTimeout이라는 함수안에 함수를 인수로 사용되니까 이게 콜백!\r\n \r\n// function timeout(){\r\n//     setTimeout(() =>{\r\n//         console.log('kkiki')\r\n//     }, 4000)\r\n// }\r\n// timeout()\r\n// console.log('Done');\r\n// 이렇게 작성되면~ Done이 먼저 출력된 뒤에 kkiki가 출력된다..ㅜ\r\n// timeout함수가 다 끝난다음에 Done을 출력하기 위해서는 아래와 같이 해야한다(콜백)\r\n// function timeout(kiki){\r\n//     setTimeout(() =>{\r\n//         console.log('kkiki')\r\n//         kiki()\r\n//     }, 4000)\r\n// }\r\n// timeout(() => { \r\n//     console.log('Done');\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 타이머 함수\r\n// setTimeout(함수, 시간) : 일정 시간 후 함수 실행\r\n// setInterval(함수, 시간) : 시간 간격마다 함수 실행\r\n// clearTimeout() : 설정된 Timeout 함수를 종료\r\n// clearInterval() : 설정된 Interval 함수를 종료\r\n\r\n// 익명 함수를 만들어서 넣어도 됨~\r\n// setTimeout(function() {\r\n//     console.log('ㅎㅇ');\r\n// }, 3000);\r\n// 위의 코드를 람다를 사용해서 바꿔봄 내용은 동일\r\n// setTimeout(() => {\r\n//     console.log('ㅎㅇ')\r\n// }, 3000);\r\n\r\n// setTimeout을 실행하게되면 특정한 timer값이 반환이 되는데\r\n// 그 값을 timer라는 변수에 한번 받아봄\r\n// const timer = setTimeout(() => {\r\n//     console.log('ㅎㅇ')\r\n// }, 3000);\r\n\r\n// 화면에 Hello world!를 클릭하면 clearTimeout을 사용해서 timer가 종료되도록 만들어봄\r\n// Hello world! 클릭하면 timer가 종료되어서 함수 실행이 안됨! ㅋㅋㅋ\r\n// const h1El = document.querySelector('h1');\r\n// h1El.addEventListener('click', function() {\r\n//     clearTimeout(timer);\r\n// })\r\n\r\n// 위의 코드를 람다로 바꿔봤다\r\n// const h1El = document.querySelector('h1');\r\n// h1El.addEventListener('click', () => {\r\n//     clearTimeout(timer);\r\n// })\r\n\r\n\r\n\r\n// const timer = setInterval(() => {\r\n//     console.log('ㅎㅇ')\r\n// }, 3000);\r\n\r\n\r\n// const h1El = document.querySelector('h1');\r\n// h1El.addEventListener('click', () => {\r\n//     clearInterval(timer);\r\n// })\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 호이스팅\r\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\r\n\r\n// const a = 7;\r\n\r\n// const double = function () {\r\n//     console.log(a * 4);\r\n// }\r\n\r\n// double()\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 즉시실행함수\r\n// IIFE, Immediately-Invoked Function Expreesion\r\n\r\n// const a = 20;\r\n// function double(){\r\n//     console.log(a * 2);\r\n// }\r\n// double();\r\n//  위와 같은 방법은 함수를 만들자 마자 바로 써야하는데 함수를 만들어 놓고 호출하는 번거로움이 있다\r\n\r\n\r\n// 익명함수를 만들자\r\n// function () {\r\n//     console.log(a * 2);\r\n// }\r\n// 익명함수를 만들었더니 호출을 하지못해서 쓸수가 없다..\r\n\r\n// 위와같은 상황을 해결하기 위해서는 익명 함수를 ( ) 괄호로 묶어주고 그 뒤에 ( ) 괄호를\r\n// 한번더 사용한다!\r\n// (function () {\r\n//     console.log(a * 2);\r\n// })()\r\n\r\n// 위의 코드와 똑같은 내용이다! 다만 위의 경우 익명함수를 만들고 ( )를 사용해서\r\n// 감싸 준 다음 ( )를 한번더 작성했다면 아래의 코드는 익명함수 내부에 ( )를 사용했다!\r\n// (function () {\r\n//     console.log(a * 2);\r\n// }())\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 화살표 함수\r\n// () => {}       vs     function ()  {}\r\n\r\n\r\n// const double = function (x) {\r\n//     return x*2;\r\n// }\r\n// console.log('double : ', double(7));\r\n\r\n\r\n// const doubleArrow = (x) => {\r\n//     return x*2;\r\n// }\r\n// console.log('doubleArrow : ', doubleArrow(7));\r\n\r\n\r\n// const doubleArrow = (x) => x*2\r\n// console.log('doubleArrow : ', doubleArrow(7));\r\n\r\n// const doubleArrow = (x) => ({\r\n//     name : 'woong'\r\n//  })\r\n//  console.log('doubleArrow : ', doubleArrow(7).name);\r\n\r\n// const sum = function (x, y){\r\n//     return x+y;\r\n// }\r\n// console.log(sum(1 ,10));\r\n\r\n// const sumArrow = (x, y) => {\r\n//     return x+y;\r\n// }\r\n// console.log(sumArrow(1 ,10));\r\n\r\n// const sumArrow = (x, y) => x+y\r\n// console.log(sumArrow(1 ,10));\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// 함수 복습\r\n\r\n// \"함수선언방식\"\r\n// function sum(x, y){\r\n//     return x+y;\r\n// }\r\n\r\n// console.log(sum(1,30));\r\n\r\n// 함수의 이름을 작성하지않는 익명 함수를 만들어서 변수에 담에서 사용하는 \"함수표현방식\"\r\n// const sum = function (x, y){\r\n//     return x+y;\r\n// }\r\n\r\n// arguments는 함수를 실행할때 전달받은 인수의 값들을 제로베이스드 배열형태로 알아서 저장해준다\r\n// 따라서 매개변수를 입력하지 않고도 함수사용이 가능하다!\r\n//  function sum (){\r\n//     return arguments[0] + arguments[1];\r\n// }\r\n\r\n// sum(1 ,10);\r\n\r\n// ------------------------------------------------------------\r\n// const ulEl = document.querySelector('ul');\r\n\r\n// for(let i = 0 ; i < 10 ; i++){\r\n//     const li = document.createElement('li');\r\n//     li.textContent=`List-${i+1}`;\r\n//     if(i % 2){\r\n//         li.addEventListener('click',function(){\r\n//             console.log(li.textContent);\r\n//         })\r\n//     }\r\n//     ulEl.appendChild(li);\r\n// }\r\n\r\n// if(1){\r\n//     console.log('ㅎㅇㅎㅇ');\r\n//     console.log(ulEl);\r\n// }"},"lineCount":null}},"error":null,"hash":"641e7894a52024fd6e865bd78e21d6d4","cacheData":{"env":{}}}